snippet #inc "#include local header (inc)" !b
#include "${1:`!p snip.rv = snip.basename + '.h'`}"$0
endsnippet

snippet #Inc "#include <...>" !b
#include <`!p
if not snip.c:
	snip.rv = vim.eval("input('File: ', '', 'customlist,CppHelperCompleteHeaders')")`>
endsnippet

snippet #def "#define ..." !b
#define ${1}
endsnippet

snippet #un "#undef ..." !b
#undef ${1}
endsnippet

snippet #ifndef "#ifndef ... #define ... #endif" !b
#ifndef ${1/([A-Za-z0-9_]+).*/$1/}
#define ${1:SYMBOL} ${2:value}
#endif
endsnippet

snippet #if "#if ... #endif" !b
#if ${1:0}
${VISUAL}${2:${VISUAL/(.*)/(?1::code)/}}
#endif$0
endsnippet

snippet #elif "#elif ..." !b
#elif ${1:0}
${VISUAL}${0:${VISUAL/(.*)/(?1::code)/}}
endsnippet

snippet #el "#else" !b
#else
${VISUAL}${0:${VISUAL/(.*)/(?1::code)/}}
endsnippet

snippet #once "Include header once only guard" !b
#ifndef ${1:`!p
if not snip.c:
	import random, string
	name = re.sub(r'[^A-Za-z0-9]+','_', snip.fn).upper()
	rand = ''.join(random.sample(string.ascii_letters+string.digits, 8))
	snip.rv = ('%s_INCLUDED_%s' % (name,rand)).upper()
else:
    snip.rv = snip.c`}
#define $1

${VISUAL}${0}

#endif // include guard

endsnippet

snippet cstr "char const*" !w
char const*
endsnippet

snippet fun "Function" !b
${1:void} ${2:function_name}($3)
{
    ${VISUAL}$5
}$0
endsnippet

snippet fun1 "Function 1" !b
${1:void} ${2:function_name}(
	${3:/* arg-1 */}
	)
{
    ${VISUAL}$5
}$0
endsnippet

snippet fun2 "Function 2" !b
${1:void} ${2:function_name}(
	${3:/* arg-1 */},
	${4:/* arg-2 */}
	)
{
    ${VISUAL}$5
}$0
endsnippet

snippet fun3 "Function 3" !b
${1:void} ${2:function_name}(
	${3:/* arg-1 */},
	${4:/* arg-2 */},
	${5:/* arg-3 */}
	)
{
    ${VISUAL}$6
}$0
endsnippet

snippet fun5 "Function 5" !b
${1:void} ${2:function_name}(
	${3:/* arg-1 */},
	${4:/* arg-2 */},
	${5:/* arg-3 */},
	${6:/* arg-5 */}
	)
{
	${VISUAL}$7
}$0
endsnippet

snippet fun5 "Function 5" !b
${1:void} ${2:function_name}(
	${3:/* arg-1 */},
	${4:/* arg-2 */},
	${5:/* arg-3 */},
	${6:/* arg-4 */},
	${7:/* arg-6 */}
	)
{
	${VISUAL}$8
}$0
endsnippet

# vim:ft=snippets:
